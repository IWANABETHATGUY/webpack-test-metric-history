name: Pr test
on:
  pull_request:



jobs:
  test:
    name: PR test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node16
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Pnpm Cache
        uses: ./.github/actions/pnpm-cache


      - name: Run test
        run: |
          pnpm test:metric


      - name: diff
        id: pr-diff
        run: |
          echo "## Test Compatibility Diff" > output
          node ./scripts/pr-diff.js ${{ secrets.GITHUB_TOKEN }} ${{ github.sha }} >> output
          cat output
          comment="$(cat output)"
          comment="${comment//'%'/'%25'}"
          comment="${comment//$'\n'/'%0A'}"
          comment="${comment//$'\r'/'%0D'}"

          echo "comment=$comment" >> $GITHUB_OUTPUT

      - name: Get the PR number
        if: github.event_name == 'pull_request'
        id: pr-number
        uses: kkak10/pr-number-action@v1.3

      - name: Find Previous Comment
        if: github.event_name == 'pull_request'
        uses: peter-evans/find-comment@v1.3.0
        id: previous-comment
        with:
          issue-number: ${{ steps.pr-number.outputs.pr }}
          body-includes: Test Compatibility Diff 

      - name: Update existing comment
        if: github.event_name == 'pull_request' && steps.previous-comment.outputs.comment-id
        uses: peter-evans/create-or-update-comment@v1.4.5
        continue-on-error: true
        with:
          comment-id: ${{ steps.previous-comment.outputs.comment-id }}
          body: |
            ${{ steps.pr-diff.outputs.comment }}
          edit-mode: replace

      - name: Write a new comment
        if: github.event_name == 'pull_request' && !steps.previous-comment.outputs.comment-id
        uses: peter-evans/create-or-update-comment@v1.4.5
        continue-on-error: true
        with:
          issue-number: ${{ steps.pr-number.outputs.pr }}
          body: |
            something
            


      # ${{ steps.pr-diff.outputs.comment }}


      # - name: Store benchmark result
      #   uses: benchmark-action/github-action-benchmark@v1.14.0
      #   with:
      #     name: Rust Benchmark
      #     tool: "cargo"
      #     output-file-path: output.txt
      #     github-token: ${{ secrets.PR_STATS_COMMENT_TOKEN }}
      #     auto-push: true
      #     gh-repository: "github.com/speedy-js/metrics"
      #
      #     # Show alert with commit comment on detecting possible performance regression
      #     fail-on-alert: false

      # - name: Push benchmark result
      #   run: git push 'https:///speedy-js:${{ secrets.GITHUB_TOKEN }}@github.com/speedy-js/rspack.git' gh-pages:gh-pages

